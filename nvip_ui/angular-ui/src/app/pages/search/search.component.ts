import { Component, OnInit } from '@angular/core';
import { faSpinner, faAngleDoubleLeft, faAngleDoubleRight, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';
import { Session } from 'src/app/services/Auth/auth-service.service';
import { CookieService } from 'src/app/services/Cookie/cookie.service';
import { VulnService } from 'src/app/services/vuln/vuln.service';

@Component({
  selector: 'app-search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.css']
})
export class SearchComponent implements OnInit {
  faSpinner = faSpinner;
  faAngleDoubleLeft = faAngleDoubleLeft;
  faAngleDoubleRight = faAngleDoubleRight;
  faAngleRight = faAngleRight;
  faAngleLeft = faAngleLeft;

  //TODO:
  showForm: boolean = true;
  searchResults: Array<any> = [];
  cvssScores = ['CRITICAL', 'HIGH', 'LOW', 'MEDIUM'];
  resultTotalCount = 0;
  pageRecord = [];
  currentPage = 0;
  pageBlocks = [];
  totalPages = 0;

  constructor(private vulnService: VulnService, private cookieService: CookieService) { }

  ngOnInit(): void {
      var session: Session = this.cookieService.get('nvip_user');
      this.vulnService.searchInfo(session.userName, session.token).subscribe((res: any) => {
        console.log("this is res", res);
      })
  }


  toggleSearchForm() {

    console.log("search form toggle press");
  }

  toggleCVSSContent() {
    console.log("this should toggle CVSS dropdown");
  }

  toggleVDOContent() {
    console.log("this should toggle VDO dropdown");
  }

  searchVulns() {
    console.log("this should trigger vuln search");
  }

  firstPage() {
    console.log("this should go to first result page");
  }

  previousPage() {
    console.log("should go to prev page");
  }

  changePage(pageIndex: number) {
    console.log("this should go to page", pageIndex);
  }

  nextPage() {

  }

  lastPage() {

  }
}
