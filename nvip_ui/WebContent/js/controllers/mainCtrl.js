app.controller('MainController', [ '$scope', '$http', '$routeParams', '$cookieStore', function($scope, $http, $routeParams, $cookieStore) {
     
    $http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded; charset=utf-8";
    
    $scope.init = function () {
    	$scope.toggleLoadingScreen(true, "nvip-daily-graph-box");
    	$scope.countGraphs();
    };
    
    /** Controller Functions **/
    $scope.countGraphs = function () {
    	
    	var username = $cookieStore.get('nvip_user').username;
		var token = $cookieStore.get('nvip_user').token;
				
		if (username==null || username=="" || token==null || token==""){
			alert("You are not logged in!");
			$cookieStore.remove('nvip_user');
			window.location.reload();
		}
    	
    	$http({
            url : 'mainServlet',
            method : "GET",  
            params : {countGraphs: "all", username: username, token: token}       
        }).then(function(response) {
            $scope.countGraphs = {};
            
            angular.forEach(response.data.map.mainPageCounts.map, function(value, key) {
            	$scope.countGraphs[key] = value;
            });
            
			$scope.loadGraphs();
            $scope.toggleLoadingScreen(false, "nvip-daily-graph-box");
        }, function(response) {
        	if (response.status == 401){
            	alert(response.data);
            	window.location.assign(window.location.href+"login");
            }
           
            console.log("Failure -> " + response.data);
            //$scope.countGraphs = response.data.map;
        });
	};
    
	$scope.toggleLoadingScreen = function(loading, className){
		if(className == "nvip-daily-graph-box"){
    		var graphBox = document.getElementsByClassName("nvip-daily-graph-box")[0];
			var loadingScreen = graphBox.getElementsByClassName("nvip-loading-screen")[0];
			var circleGraphs = graphBox.getElementsByClassName("nvip-circle-graph");
    		if(loading){
    			loadingScreen.style.display = 'block';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'none';
				});
    		} 
    		else {
    			loadingScreen.style.display = 'none';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'block';
				});
    		}
    	}
    		
    }

	$scope.loadGraphs = function() {
		
		
		//Bar Graph
		google.charts.load('47', {'packages':['bar', 'corechart', 'line']});
    	google.charts.setOnLoadCallback(setGraphs);

	    function setGraphs() {
		
		//Bar Graph Init
	      var barData = google.visualization.arrayToDataTable([
	        ["", "# of CVEs", {role: 'style'}],
	        ["Total CVEs", parseInt($scope.countGraphs.totalCveCount), 'color: red'],
	        ["CVEs Added Today", parseInt($scope.countGraphs.avgCvesAdded), 'color: blue'],
	        ["CVEs Updated Today", parseInt($scope.countGraphs.avgCvesUpdated), 'color: green'],
	      ]);

		//Area Graph Init
		  var areaData = new google.visualization.DataTable();
	  
		  areaData.addColumn("string", ""); //run date time
		  areaData.addColumn("number", "CVEs Not In NVD");
		  areaData.addColumn("number", "CVEs Not In Mitre");
			
          var dates = $scope.countGraphs.run_date_times.split(";");		  
          var nNVD = $scope.countGraphs.not_in_nvd_count.split(";");
	      var nMitre = $scope.countGraphs.not_in_mitre_count.split(";");

		  for (var i = 0; i < 10 && i < dates.length; i++) {
		  	areaData.addRow([dates[i], parseInt(nNVD[i]), parseInt(nMitre[i])]);
		  }

		//Line Graph Init
		var lineData = new google.visualization.DataTable();
	  
		  lineData.addColumn("string", ""); //run date time
		  lineData.addColumn("number", "Avg. Time Gap From NVD");
		  lineData.addColumn("number", "Avg. Time Gap From Mitre");
	  
          var avgNVD = $scope.countGraphs.avgTimeGapNvd.split(";");
	      var avgMitre = $scope.countGraphs.avgTimeGapMitre.split(";");

		  for (var i = 0; i < 10 && i < dates.length; i++) {
			if (avgNVD[i] != null && avgMitre[i] != null) {
			  	lineData.addRow([dates[i], parseInt(avgNVD[i]), parseInt(avgMitre[i])]);
			}
		  }
		
		//Bar graph style
	      var barOptions = {
	        legend: { position: 'none' },
	        bar: { groupWidth: "60%" },
			height: 250,
			width: 410,
			backgroundColor: {
				fill: '#0c204c',	
			},
			chartArea: {
				backgroundColor: '#0c204c',
			},
			vAxis: {
				gridlines: {
					color: 'white'
				},
				baselineColor:'white',
				textStyle: {
					color: 'white'
				}
			},
			hAxis: {
				baselineColor: 'white',
				textStyle: {
					color: 'white'
				}
			}
		};
		
		//Area graph style
	      var areaOptions = {
				legend: { position: 'none' },
				backgroundColor: {
					fill: '#0c204c',	
				},
				chartArea: {
					backgroundColor: '#0c204c',
				},
				height: 250,
				width: 400,
				vAxis: {
					gridlines: {
						color: 'white'
					},
					baselineColor:'white',
					textStyle: {
						color: 'white'
					}
				},
				hAxis: {
					textStyle: {
						color: '#0c204c'
					},
					textPosition: 'none',
					baselineColor: 'white',
				}
		  };

		//Line graph style
	      var lineOptions = {
				legend: { position: 'none' },
				backgroundColor: {
					fill: '#0c204c',	
				},
				chartArea: {
					backgroundColor: '#0c204c',
				},
				height: 250,
				width: 400,
				vAxis: {
					gridlines: {
						color: 'white'
					},
					baselineColor:'white',
					textStyle: {
						color: 'white'
					}
				},
				hAxis: {
					textStyle: {
						color: '#0c204c'
					},
					textPosition: 'none',
					baselineColor: 'white',
				},
			  axisFontSixe: 0
		  };
	      
		  var barChart = new google.charts.Bar(document.getElementById('columnchart_values'));
     
		  var areaChart = new google.charts.Line(document.getElementById('areachart_values'));

		  var lineChart = new google.charts.Line(document.getElementById('linechart_values'));

		  barChart.draw(barData, google.charts.Bar.convertOptions(barOptions));

		  areaChart.draw(areaData, google.charts.Line.convertOptions(areaOptions));

		  lineChart.draw(lineData, google.charts.Line.convertOptions(lineOptions));
	  }
		
	
	}
	
	/** Initialization code **/
    $scope.init();
	
	
} ]);