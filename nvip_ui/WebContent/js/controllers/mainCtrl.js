app.controller('MainController', [ '$scope', '$http', '$routeParams', '$cookieStore', function($scope, $http, $routeParams, $cookieStore) {
     
    $http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded; charset=utf-8";
    
    $scope.init = function () {
    	$scope.toggleLoadingScreen(true, "nvip-daily-graph-box");
    	$scope.countGraphs();
    };
    
    /** Controller Functions **/
    $scope.countGraphs = function () {
    	
    	var username = $cookieStore.get('nvip_user').username;
		var token = $cookieStore.get('nvip_user').token;
				
		if (username==null || username=="" || token==null || token==""){
			alert("You are not logged in!");
			$cookieStore.remove('nvip_user');
			window.location.reload();
		}
    	
    	$http({
            url : 'mainServlet',
            method : "GET",  
            params : {countGraphs: "all", username: username, token: token}       
        }).then(function(response) {
            $scope.countGraphs = {};
            
            angular.forEach(response.data.map.mainPageCounts.map, function(value, key) {
            	$scope.countGraphs[key] = value;
            });
            
			$scope.loadGraphs();
            $scope.toggleLoadingScreen(false, "nvip-daily-graph-box");
        }, function(response) {
        	if (response.status == 401){
            	alert(response.data);
            	window.location.assign(window.location.href+"login");
            }
           
            console.log("Failure -> " + response.data);
            //$scope.countGraphs = response.data.map;
        });
	};
    
	$scope.toggleLoadingScreen = function(loading, className){
		if(className == "nvip-daily-graph-box"){
    		var graphBox = document.getElementsByClassName("nvip-daily-graph-box")[0];
			var loadingScreen = graphBox.getElementsByClassName("nvip-loading-screen")[0];
			var circleGraphs = graphBox.getElementsByClassName("nvip-circle-graph");
    		if(loading){
    			loadingScreen.style.display = 'block';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'none';
				});
    		} 
    		else {
    			loadingScreen.style.display = 'none';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'block';
				});
    		}
    	}
    		
    }

	$scope.loadGraphs = function() {
		
		google.charts.load("current", {'packages':['bar']});
    	google.charts.setOnLoadCallback(setBarGraph);

	    function setBarGraph() {
	      var data = google.visualization.arrayToDataTable([
	        ["Stat", "# of CVEs", {role: 'style'}],
	        ["Total CVEs", $scope.countGraphs.totalCveCount, 'color: red'],
	        ["CVEs Added Today", $scope.countGraphs.avgCvesAdded, 'color: blue'],
	        ["CVEs Updated Today", $scope.countGraphs.avgCvesUpdated, 'color: green'],
	      ]);
	
	
	      var options = {
		
			animation: {
				startup: true,
				easing: 'out',
				duration: 1000
			},
	        legend: { position: 'none' },
	        axes: {
            	x: {
             		0: { side: 'top', label: 'CVE Statistics'} // Top x-axis.
            	}
          	},
	        bar: { groupWidth: "60%" },
			height: 220,
			width: 400,
			backgroundColor: {
				fill: '#0c204c',	
			},
			chartArea: {
				backgroundColor: '#0c204c',
			},
			vAxis: {
				gridlines: {
					color: 'white'
				},
				baselineColor:'white',
				textStyle: {
					color: 'white'
				}
			},
			hAxis: {
				baselineColor: 'white',
				textStyle: {
					color: 'white'
				}
			}
		};
	      
		  var chart = new google.charts.Bar(document.getElementById('columnchart_values'));
     
		  chart.draw(data, google.charts.Bar.convertOptions(options));
	  }
		
	}
	
	/** Initialization code **/
    $scope.init();
	
	
} ]);