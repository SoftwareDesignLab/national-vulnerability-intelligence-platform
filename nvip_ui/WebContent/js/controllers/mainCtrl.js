app.controller('MainController', [ '$scope', '$http', '$routeParams', '$cookieStore', function($scope, $http, $routeParams, $cookieStore) {
     
    $http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded; charset=utf-8";
    
    $scope.init = function () {
    	$scope.toggleLoadingScreen(true, "nvip-daily-graph-box");
    	$scope.countGraphs();
    };
    
    /** Controller Functions **/
    $scope.countGraphs = function () {
    	
    	var username = $cookieStore.get('nvip_user').username;
		var token = $cookieStore.get('nvip_user').token;
				
		if (username==null || username=="" || token==null || token==""){
			alert("You are not logged in!");
			$cookieStore.remove('nvip_user');
			window.location.reload();
		}
    	
    	$http({
            url : 'mainServlet',
            method : "GET",  
            params : {countGraphs: "all", username: username, token: token}       
        }).then(function(response) {
            $scope.countGraphs = {};
            
            angular.forEach(response.data.map.mainPageCounts.map, function(value, key) {
            	$scope.countGraphs[key] = value;
            });
            
			$scope.loadGraphs();
            $scope.toggleLoadingScreen(false, "nvip-daily-graph-box");
        }, function(response) {
        	if (response.status == 401){
            	alert(response.data);
            	window.location.assign(window.location.href+"login");
            }
           
            console.log("Failure -> " + response.data);
            //$scope.countGraphs = response.data.map;
        });
	};
    
	$scope.toggleLoadingScreen = function(loading, className){
		if(className == "nvip-daily-graph-box"){
    		var graphBox = document.getElementsByClassName("nvip-daily-graph-box")[0];
			var loadingScreen = graphBox.getElementsByClassName("nvip-loading-screen")[0];
			var circleGraphs = graphBox.getElementsByClassName("nvip-circle-graph");
    		if(loading){
    			loadingScreen.style.display = 'block';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'none';
				});
    		} 
    		else {
    			loadingScreen.style.display = 'none';
				angular.forEach(circleGraphs, function(circleGraph, index) {
					circleGraph.style.display = 'block';
				});
    		}
    	}
    		
    }

	$scope.loadGraphs = function() {
		
		
		//Bar Graph
		google.charts.load("current", {'packages':['bar']});
    	google.charts.setOnLoadCallback(setBarGraph);

	    function setBarGraph() {
	      var data = google.visualization.arrayToDataTable([
	        ["Stat", "# of CVEs", {role: 'style'}],
	        ["Total CVEs", $scope.countGraphs.totalCveCount, 'color: red'],
	        ["CVEs Added Today", $scope.countGraphs.avgCvesAdded, 'color: blue'],
	        ["CVEs Updated Today", $scope.countGraphs.avgCvesUpdated, 'color: green'],
	      ]);
	
	
	      var options = {
		
			animation: {
				startup: true,
				easing: 'out',
				duration: 1000
			},
	        legend: { position: 'none' },
	        axes: {
            	x: {
             		0: { side: 'top', label: 'CVE Statistics'} // Top x-axis.
            	}
          	},
	        bar: { groupWidth: "60%" },
			height: 220,
			width: 400,
			backgroundColor: {
				fill: '#0c204c',	
			},
			chartArea: {
				backgroundColor: '#0c204c',
			},
			vAxis: {
				gridlines: {
					color: 'white'
				},
				baselineColor:'white',
				textStyle: {
					color: 'white'
				}
			},
			hAxis: {
				baselineColor: 'white',
				textStyle: {
					color: 'white'
				}
			}
		};
	      
		  var chart = new google.charts.Bar(document.getElementById('columnchart_values'));
     
		  chart.draw(data, google.charts.Bar.convertOptions(options));
	  }
		
		
		//Area Graph	
		google.charts.load('current', {'packages':['corechart']});
	   	google.charts.setOnLoadCallback(drawAreaChart);
		
		function drawAreaChart() {
	      var data = google.visualization.arrayToDataTable([
	      		['Year', 'Sales', 'Expenses'],
		    	['2013',  1000,      400],
		    	['2014',  1170,      460],
		        ['2015',  660,       1120],
		        ['2016',  1030,      540]
		   ]);
		
	      var options = {
		        title: 'Company Performance',
		        hAxis: {title: 'Year',  titleTextStyle: {color: '#333'}},
		        vAxis: {minValue: 0}
		  };
	
		  var chart = new google.visualization.AreaChart(document.getElementById('areachart_values'));
		      chart.draw(data, options);
		  }
		
		//Line Graph
		google.charts.load('current', {'packages':['line']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {

      		var data = new google.visualization.DataTable();
      		data.addColumn('number', 'Day');
	        data.addColumn('number', 'Guardians of the Galaxy');
	        data.addColumn('number', 'The Avengers');
	        data.addColumn('number', 'Transformers: Age of Extinction');
	
	        data.addRows([
		        [1,  37.8, 80.8, 41.8],
		        [2,  30.9, 69.5, 32.4],
		        [3,  25.4,   57, 25.7],
		        [4,  11.7, 18.8, 10.5],
		        [5,  11.9, 17.6, 10.4],
		        [6,   8.8, 13.6,  7.7],
		        [7,   7.6, 12.3,  9.6],
		        [8,  12.3, 29.2, 10.6],
		        [9,  16.9, 42.9, 14.8],
		        [10, 12.8, 30.9, 11.6],
		        [11,  5.3,  7.9,  4.7],
		        [12,  6.6,  8.4,  5.2],
		        [13,  4.8,  6.3,  3.6],
		        [14,  4.2,  6.2,  3.4]
	        ]);
	
	        var options = {
		        chart: {
		          title: 'Box Office Earnings in First Two Weeks of Opening',
		          subtitle: 'in millions of dollars (USD)'
		        },
		        width: 350,
		        height: 400,
		        axes: {
		          x: {
		            0: {side: 'top'}
		          }
		        }
      		};

      		var chart = new google.charts.Line(document.getElementById('linechart_values'));

      		chart.draw(data, google.charts.Line.convertOptions(options));
    }

		
	
	}
	
	/** Initialization code **/
    $scope.init();
	
	
} ]);