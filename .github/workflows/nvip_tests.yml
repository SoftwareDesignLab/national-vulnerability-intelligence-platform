
# CI for NVIP

name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Zip UI
        run: |
          zip -r -q angular-ui.zip angular-ui
      - name: Prepare MySQL DB
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE nvip;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
          mysql -e 'source nvip_backend/nvip_data/mysql-database/CreateAndInitializeDb.sql' -uroot -proot
      - name: Test and Build backend with Maven
        run: |
          cd nvip_backend
          mvn install:install-file \
            -Dfile=sleepycat-5.0.84.jar \
            -DgroupId=com.sleepycat \
            -DartifactId=je \
            -Dversion=5.0.84 \
            -Dpackaging=jar \
            -DgeneratePom=true
          
          mvn dependency:go-offline
          mvn package -DskipTests
  
  deploy: 
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps: 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker container for backend
        run: |
          cd nvip_backend
          docker build . -t nvip-crawler:dev -t ghcr.io/softwaredesignlab/nvip-crawler:dev
          docker push ghcr.io/softwaredesignlab/nvip-crawler:dev
      - name: Build API with Maven and prepare/push docker image for API
        run: |
          cd nvip_api
          mvn package -DskipTests
          docker build . -t nvip-api:dev -t ghcr.io/softwaredesignlab/nvip-api:dev
          docker push ghcr.io/softwaredesignlab/nvip-api:dev
      