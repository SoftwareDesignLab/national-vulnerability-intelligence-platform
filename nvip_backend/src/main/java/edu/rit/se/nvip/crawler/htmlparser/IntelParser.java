package edu.rit.se.nvip.crawler.htmlparser;

import edu.rit.se.nvip.model.CompositeVulnerability;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.util.ArrayList;
import java.util.List;

public class IntelParser extends AbstractCveParser {

    public IntelParser(String domainName) { sourceDomainName = domainName; }

    @Override
    public List<CompositeVulnerability> parseWebPage(String sSourceURL, String sCVEContentHTML) {

        List<CompositeVulnerability> vulnList = new ArrayList<>();

        Document doc = Jsoup.parse(sCVEContentHTML);

        // get the top table
        Element advTable = doc.select("table").first();
        // get publish date from table
        Element release = advTable.children().select("td:contains(release)").first();
        String publishDate = release.nextElementSibling().text();
        // get last modified date from table
        Element revised = advTable.children().select("td:contains(revised)").first();
        String lastModifiedDate = revised.nextElementSibling().text();

        // looks to follow the format:
        // CVEID
        // Description
        // CVSS Base Score
        // CVSS Vector

        // extract foreach CVEID
        Elements cves = doc.select("p:contains(CVEID:)");
        for (Element cve : cves) {
            String line = cve.text();
            String cveID = line.split(": ")[1];
            Element next = cve.nextElementSibling();
            String description = next.text();
            description = description.split(": ")[1];
            vulnList.add(new CompositeVulnerability(
                0, sSourceURL, cveID, null, publishDate, lastModifiedDate, description, sourceDomainName
            ));
        }

        return vulnList;
    }
}
