package edu.rit.se.nvip.crawler.htmlparser;

import edu.rit.se.nvip.model.CompositeVulnerability;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.util.ArrayList;
import java.util.List;

public class SnykParser extends AbstractCveParser {

    /**
     * Parse advisories listed to security.snyk.io/vuln/3
     * @param domainName - snyk domain
     */
    public SnykParser(String domainName) { sourceDomainName = domainName; }

    @Override
    public List<CompositeVulnerability> parseWebPage(String sSourceURL, String sCVEContentHTML) {

        List<CompositeVulnerability> vulnList = new ArrayList<>();

        Document doc = Jsoup.parse(sCVEContentHTML);

        // extract cve id from top info bar near title
        Element vulnInfo = doc.select("div.vuln-info-block").first();
        if (vulnInfo != null) {
            if  (vulnInfo.text().contains("CVE-")) {
                String cveId = "";
                String[] infoTexts = vulnInfo.text().split(" ");
                for (String s : infoTexts) {
                    if (s.contains("CVE-")) cveId = s;
                }

                // get publish date from bottom right info box
                Elements cardBodies = doc.select("div.vue--card__body");
                // the second card body
                Element dateBox = cardBodies.get(1);
                Element pubDate = dateBox.children().select("li:contains(Published)").first();
                String publishedDate = "";
                if (pubDate != null)
                    publishedDate = pubDate.text().split("published")[1].trim();

                // get description from 'Overview' and 'Details' paragraphs
                StringBuilder description = new StringBuilder();
                Elements descHeaders = doc.select("h2:contains(Overview), h2:contains(Details)");
                for (Element header : descHeaders) {
                    Element next = header.nextElementSibling();
                    if (next != null)
                        description.append(next.text());
                }
                vulnList.add(new CompositeVulnerability(
                        0, sSourceURL, cveId, null, publishedDate, publishedDate, description.toString(), sourceDomainName
                ));
            }
        }

        return vulnList;
    }
}
