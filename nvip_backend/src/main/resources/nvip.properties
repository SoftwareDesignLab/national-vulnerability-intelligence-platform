# log4j level. Could be INFO, WARNING or ERROR 
log4jLogLevel=INFO

##########################     NVIP SUB DIRS    #################################
outputDir = output
dataDir = nvip_data
#mysql or sqlite: all lowercase
database=mysql
nameextractorDir=productnameextraction
exploitScrapingEnabled=false

##########################       SOURCE URL     #################################
#The list of sources from where we try to derive new CVE sources (Seed URLs).
#comma separated domains (sources) that nvip has a parser for
knownSources=packetstorm,tenable,oval.cisecurity,exploit-db,securityfocus,kb.cert,securitytracker,talosintelligence,gentoo,vmware,bugzilla,seclists,anquanke

##########################       CRAWLER        #################################
#crawler, depth is zero, bc nvip has a separate source-url refresh process with a higher depth! It needs to be run periodically
#Depth zero: look at the given url, no child urls are crawled. 
numberOfCrawlerThreads = 10
crawlSearchDepth = 1
maxNumberOfPages = 100
seedURLs = url-sources/nvip-seeds-test.txt
whiteListDomains = url-sources/nvip-whitelist.txt

# the delay (milliseconds) between successive page crawls. For more sensitive websites the larger politeness delay is used.
defaultCrawlerPoliteness=2000
delayedCrawlerPoliteness=150

########################## CVE CHARACTERIZATION PROPERTIES #################################

# This is the sub directory under the <dataDir> that stores the VDO training data files
cveCharacterizationTrainingDataDir = characterization

# cveCharacterizationTrainingData: VDO training CSV data file name(s): If more than one, separate with comma
# If your file is <ImpactMethod.csv>, then you should have <ImpactMethod.csv> here! 
# If your files are <ImpactMethod.csv> and <Context.csv>, then you should have <ImpactMethod.csv,Context.csv> here! 
cveCharacterizationTrainingData = AttackTheater.csv,Context.csv,ImpactMethod.csv,LogicalImpact.csv,Mitigation.csv

# Machine Learning (ML) or Information Theory(IT): (s): 
# If more than one VDO training file is used, you should have comma separated EQUAL number of approaches (one for each training file)
# If you have two training CSV files configured in <cveCharacterizationTrainingData>, you may have <ML,IT> here
cveCharacterizationApproach=ML

# For ML--> SVM, RF, NB, Vote, For IT--> CE, KLD, JSD  
# If more than one VDO training file is used, you should have comma separated EQUAL number of methods (one for each training file)
# If you have two training CSV files configured in <cveCharacterizationTrainingData>, you may have <Vote,RandomForest> here
cveCharacterizationMethod=Vote


######################### RECONCILIATION ######################
# SIMPLE, APACHE_OPEN_NLP, STANFORD_SIMPLE_NLP
cveReconcileMethod=APACHE_OPEN_NLP

##########################       PRODUCT NAME EXTRACTOR MODELS     #################################
char2vecConfig = c2v_model_config_50.json
char2vecWeights = c2v_model_weights_50.h5
word2vec = w2v_model_250.bin
nerModel = NERallModel.bin
nerModelNormalizer = NERallNorm.bin
cpeSerialized = CPEmap.ser

##########################       EMAIL MODULE     #################################
#Enter a sender email/password to be able to send CVEs via email to the people in the <user> table. Ex: abc@cde.com
# <location> is the root path of the web site where the CVE is located. 
Email=
Password=
location=http://cve.live/