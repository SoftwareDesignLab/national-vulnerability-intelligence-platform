package edu.rit.se.nvip.crawler.htmlparser;
import edu.rit.se.nvip.model.CompositeVulnerability;
import org.junit.Test;

import java.util.List;

import static junit.framework.TestCase.assertEquals;
import static org.junit.Assert.assertTrue;

public class CoreParserTest extends AbstractParserTest {

    @Test
    public void testCoreSingle() {
        String html = safeReadHtml("src/test/resources/test-core-single.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://www.coresecurity.com/core-labs/advisories/cisco-anyconnect-posture-hostscan-security-service-bypass",
                html
        );
        assertEquals(1, list.size());
        CompositeVulnerability vuln = list.get(0);
        assertEquals("CVE-2021-1567", vuln.getCveId());
        assertEquals("2021-06-16", vuln.getPublishDate());
        assertEquals("2021-06-16", vuln.getLastModifiedDate());
        assertTrue(vuln.getDescription().contains("AnyConnect Posture Module uses the HostScan"));
        assertTrue(vuln.getDescription().contains("accepting commands given in a certain packet format"));
    }

    @Test
    public void testCoreMultiple() {
        String html = safeReadHtml("src/test/resources/test-core-multiple.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://www.coresecurity.com/core-labs/advisories/pydio-cells-204-multiple-vulnerabilities",
                html
        );
        assertEquals(7, list.size());
        CompositeVulnerability vuln = list.get(2);
        assertEquals("CVE-2020-12853", vuln.getCveId());
        assertEquals("2020-05-28", vuln.getPublishDate());
        assertEquals("2020-05-28", vuln.getLastModifiedDate());
        assertTrue(vuln.getDescription().contains("The attacker could leverage a public file share link to gain"));
        assertTrue(vuln.getDescription().contains("A malicious user can either upload or create a new file"));
    }

}
