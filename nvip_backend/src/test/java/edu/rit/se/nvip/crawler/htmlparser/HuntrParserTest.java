package edu.rit.se.nvip.crawler.htmlparser;

import edu.rit.se.nvip.model.CompositeVulnerability;
import org.junit.Test;

import java.util.List;

import static junit.framework.TestCase.*;
import static junit.framework.TestCase.assertEquals;

public class HuntrParserTest extends AbstractParserTest {

    @Test
    public void testHuntrCVE() {
        String html = safeReadHtml("src/test/resources/test-huntr.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://huntr.dev/bounties/2d4d309e-4c96-415f-9070-36d0815f1beb/",
                html
        );
        assertEquals(1, list.size());
        CompositeVulnerability vuln = list.get(0);
        assertEquals("CVE-2023-1127", vuln.getCveId());
        assertTrue(vuln.getDescription().contains("division by zero in fuction"));
        assertFalse(vuln.getDescription().contains("was it not verification as a vulnerability?"));
        assertEquals("Feb 19th 2023", vuln.getPublishDate());
        // this should be relative to what day it is parsed
        // since this HTML was taken Mar 7th, this will be 6 days ago from Mar 7th
        assertEquals("2023-03-01", vuln.getLastModifiedDate());
    }

    @Test
    public void testHuntrNoCVE() {
        String html = safeReadHtml("src/test/resources/test-huntr-no.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://huntr.dev/bounties/4cb54865-bcd5-4bf4-8c09-2b1f00fea842/",
                html
        );
        assertEquals(0, list.size());
    }
}
