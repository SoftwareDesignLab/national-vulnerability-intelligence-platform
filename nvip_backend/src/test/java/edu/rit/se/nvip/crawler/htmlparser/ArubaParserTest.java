package edu.rit.se.nvip.crawler.htmlparser;
import edu.rit.se.nvip.model.CompositeVulnerability;
import org.junit.Test;
import java.util.List;
import static junit.framework.TestCase.assertNotNull;
import static junit.framework.TestCase.assertEquals;
import static junit.framework.TestCase.assertTrue;
import static junit.framework.TestCase.assertFalse;

public class ArubaParserTest extends AbstractParserTest {

    @Test
    public void testArubaSingle() {
        String html = safeReadHtml("src/test/resources/test-aruba-single.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2022-011.txt",
                html
        );
        assertEquals(1, list.size());
        CompositeVulnerability vuln = getVulnerability(list, "CVE-2022-23678");
        assertNotNull(vuln);
        assertTrue(vuln.getDescription().contains("A vulnerability exists in the Aruba VIA client for Microsoft"));
        assertEquals("2022-Jul-26", vuln.getPublishDate());
        assertEquals("2022-Aug-19", vuln.getLastModifiedDate());
    }


    @Test
    public void testArubaMultiple() {
        String html = safeReadHtml("src/test/resources/test-aruba-multiple.html");
        List<CompositeVulnerability> list = crawler.parseWebPage(
                "https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2023-003.txt",
                html
        );
        assertEquals(8, list.size());
        CompositeVulnerability vuln = getVulnerability(list, "CVE-2023-25591");
        assertNotNull(vuln);
        assertTrue(vuln.getDescription().contains("further privileges on the ClearPass instance"));
        assertFalse(vuln.getDescription().contains("execute arbitrary script code in a victim's"));
        assertEquals("2023-Mar-14", vuln.getPublishDate());
        assertEquals("2023-Mar-14", vuln.getLastModifiedDate());
    }
}
