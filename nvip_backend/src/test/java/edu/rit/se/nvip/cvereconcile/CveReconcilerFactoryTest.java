package edu.rit.se.nvip.cvereconcile;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.*;


public class CveReconcilerFactoryTest {

    final CveReconcilerFactory reconcileFactory = new CveReconcilerFactory();

    private static Stream<Arguments> provideStringsForFactory() {
        return Stream.of(
                Arguments.of(CveReconcilerFactory.SIMPLE, CveReconcilerSimple.class),
                Arguments.of(CveReconcilerFactory.APACHE_OPEN_NLP, CveReconcilerApacheOpenNLP.class),
                Arguments.of(CveReconcilerFactory.STANFORD_CORE_NLP, CveReconcilerStanfordCoreNLP.class),
                Arguments.of(CveReconcilerFactory.STANFORD_SIMPLE_NLP, CveReconcilerStanfordSimpleNLP.class)
        );
    }

    @ParameterizedTest
    @MethodSource("provideStringsForFactory")
    void itReturnsProperClass(String input, Class<?> expected) {
        AbstractCveReconciler reconciler = reconcileFactory.createReconciler(input);
        assertEquals(expected, reconciler.getClass());
    }

}
