package edu.rit.se.nvip.crawler.htmlparser;

import edu.rit.se.nvip.model.CompositeVulnerability;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.*;

public class AutodeskParserTest extends AbstractParserTest{

    @Test
    public void testAutodesk() {
        String html = safeReadHtml("src/test/resources/test-autodesk-table-multi.html");
        List<CompositeVulnerability> list = new AutodeskParser("autodesk").parseWebPage("autodesk", html);
        assertEquals(18, list.size());
        CompositeVulnerability vuln = getVulnerability(list, "CVE-2021-45960");
        assertNotNull(vuln);
        assertTrue(vuln.getDescription().contains("Expat"));
        assertTrue(vuln.getDescription().contains("Autodesk products leveraging internal components"));
        assertEquals("2022/07/28 00:00:00", vuln.getLastModifiedDate());
        assertEquals("2022/10/12 00:00:00", vuln.getPublishDate());

        vuln = getVulnerability(list, "CVE-2021-22947");
        assertNotNull(vuln);
        assertTrue(vuln.getDescription().contains("Curl"));
    }

    @Test
    public void testAutodeskMulti() {
        String html = safeReadHtml("src/test/resources/test-autodesk-multi-desc.html");
        List<CompositeVulnerability> list = new AutodeskParser("autodesk").parseWebPage("autodesk", html);
        assertEquals(4, list.size());
        CompositeVulnerability vuln = getVulnerability(list, "CVE-2022-33890");
        assertNotNull(vuln);
        assertTrue(vuln.getDescription().contains("A maliciously crafted PCT"));
        assertFalse(vuln.getDescription().contains("Applications and services that utilize"));
        assertEquals("2022/12/14 00:00:00", vuln.getPublishDate());
        assertEquals("2022/12/14 00:00:00", vuln.getLastModifiedDate());
    }

}